== API返回错误代码==
 1=操作成功
 0=操作失败
  
 -1=用户名为空
 -2=用户名长度错误
 -3=用户名含有非法字符
 -4=用户名含有禁用字符
 -5=用户名已经存在
 -6=邮箱为空
 -7=非法邮箱地址
 -8=邮箱不在白名单中
 -9=邮箱在黑名单中
 -10=邮箱地址已被注册
 -11=密码长度错误
 -12=密码含有非法字符
 -13=原密码错误
 -14=帐号不存在
 -20=两次输入的密码不一致
      
 -30=私信长度错误
  
 -40=学校为空
 -42=学校地区为空
 -42=学校类型为空
 -80=上传失败
 -81=上传类型错误
 -82=上传文件太小
 -83=上传文件太大
 -84=上传文件错误  
 -90=连接超时
 -91=类名错误
 -92=方法错误
 -93=服务器错误

== 用户信息API==
所属模块WindidApi::api('user')
{| class="wikitable"
|-  
! 功能说明 !! 本地接口名称 !! http接口名称 !! 详细说明
|-
| 注册新用户 || register || user/register || [[user/register|示例]]
|-
| 用户登录 || login || user/login || [[user/login|示例]]
|-
| 用户同步登录 || synLogin || user/synLogin  || [[user/synLogin|示例]]
|-
| 用户同步登出 || synLogout || user/synLogout || [[user/synLogout|示例]]
|-
| 检查用户基本信息是否合法 || checkUserInput || user/checkInput  || [[user/checkInput|示例]]
|-
| 验证安全问题 || checkQuestion || user/checkQuestion  || [[user/checkQuestion|示例]]
|-
| 获取用户基本信息 || getUser || user/get  || [[user/get|示例]]
|-
| 获取用户详细信息 || getUserInfo || user/getInfo || [[user/getInfo|示例]]
|-
| 获取多个用户详细信息 || fecthUserInfo || user/fecthInfo  || [[user/fecthInfo|示例]]
|-
| 修改用户基本信息 || editUser || user/edit  || [[user/edit|示例]]
|-
| 修改用户详细信息 || editUserInfo || user/editInfo || [[user/editInfo|示例]]
|-
| 删除单个用户 || deleteUser || user/delete || [[user/delete|示例]]
|-
| 删除多个用户 || batchDeleteUser || user/batchDelete || [[user/batchDelete|示例]]
|}

==用户积分API==
所属模块WindidApi::api('user')
{| class="wikitable"
|-  
! 功能说明 !! 本地接口名称 !! http接口名称 !! 详细说明
|-
| 获取用户积分 || getUserCredit || user/getCredit || [[user/getCredit|示例]]
|-
| 获取多个用户积分 || fecthUserCredit || user/fecthCredit || [[user/fecthCredit|示例]]
|-
| 修改用户积分 || editCredit || user/editCredit || [[user/editCredit|示例]]
|-
| 清除用户某个积分 || clearCredit || user/clearCredit || [[user/clearCredit|示例]]
|}

==用户黑名单API==
所属模块WindidApi::api('user')
{| class="wikitable"
|-  
! 功能说明 !! 本地接口名称 !! http接口名称 !! 详细说明
|-
| 获取用户黑名单 || getBlack || user/getBlack || [[user/getBlack|示例]]
|-
| 获取多个用户黑名单 || fetchBlack || user/fetchBlack || [[user/fetchBlack|示例]]
|-
| 增加黑名单 || addBlack || user/addBlack || [[user/addBlack|示例]]
|-
| 删除黑名单 || delBlack || user/delBlack || [[user/delBlack|示例]]

|}

==用户头像API==
所属模块WindidApi::api('avatar')

{| class="wikitable"
|-  
! 功能说明 !! 本地接口名称 !! http接口名称 !! 详细说明
|-
| 获取用户头像 || getAvatar || avatar/get || [[avatar/get|示例]]
|-
| 还原为默认头像 || defaultAvatar || avatar/default || [[avatar/default|示例]]
|-
| 获取头像上传flash表单 || showFlash || avatar/getFlash || [[avatar/getFlash|示例]]
|-
| 提交上传头像 || doAvatar || avatar/doavatar || [[avatar/doavatar|示例]]
|}

==用户私信API==
所属模块WindidApi::api('message')
* [[基础API]]
{| class="wikitable"
|-  
! 功能说明 !! 本地接口名称 !! http接口名称 !! 详细说明
|-
| 获取用户未读私信数 || getUnRead || message/getNum || [[message/getNum|示例]]
|-
| 修改用户私信数 || editMessageNum || message/editNum || [[message/editNum|示例]]
|-
| 发送私信 || send || message/send || [[message/send|示例]]
|-
| 获取单条私信 || getMessageById || message/getMessageById || [[message/getMessageById|示例]]
|-
| 删除多条私信 || deleteByMessageIds || message/deleteByMessageIds || [[message/deleteByMessageIds|示例]]
|-
| 删除用户全部私信 || deleteUserMessages || message/deleteUserMessages || [[message/deleteUserMessages|示例]]
|}


* [[收/发件箱模式API]]
{| class="wikitable"
|-  
! 功能说明 !! 本地接口名称 !! http接口名称 !! 详细说明
|-
| 分页获取发件箱私信列表 || fromBox || message/fromBox || [[message/fromBox|示例]]
|-
| 分页获取收件箱私信列表 || toBox || message/toBox || [[message/toBox|示例]]
|-
| 标记多条私信为已读 || readMessages || message/readMessages|| [[message/readMessages|示例]]
|-
| 删除多条私信 || deleteMessages ||message/deleteMessages || [[message/deleteMessages|示例]]
|}


* [[对话模式API]]
{| class="wikitable"
|-  
! 功能说明 !! 本地接口名称 !! http接口名称 !! 详细说明
|-
| 获取一条对话信息 || getDialog || message/getDialog || [[message/getDialog|示例]]
|-
| 获取多条对话信息 || fetchDialog || message/fetchDialog || [[message/fetchDialog|示例]]
|-
| 获取两个用户间的对话信息 || getDialogByUser || message/getDialogByUser || [[message/getDialogByUser|示例]]
|-
| 统计用户对话数 || countDialog || message/countDialog || [[message/countDialog|示例]]
|-
| 分页获取用户对话列表 || getDialogList || message/getDialogList || [[message/getDialogList|示例]]
|-
| 获取用户未读私信的对话列表 || getUnreadDialogsByUid || message/getUnreadDialogsByUid || [[message/getUnreadDialogsByUid|示例]]
|-
| 标记某对话中多条私信为已读 || read || message/read || [[message/read|示例]]
|-
| 标记多条对话已读 || readDialog || message/readDialog || [[message/readDialog|示例]]
|-
| 删除某对话中多条私信 || delete || message/delete || [[message/delete|示例]]
|-
| 删除多条对话 || batchDeleteDialog || message/batchDeleteDialog || [[message/batchDeleteDialog|示例]]
|-
| 统计一条对话中的私信数 || countMessage || message/countMessage || [[message/countMessage|示例]]
|-
| 分页获取一条对话中的私信列表 || getMessageList || message/getMessageList || [[message/getMessageList|示例]]
|}

==地区库API==
所属模块WindidApi::api('area')

{| class="wikitable"
|-  
! 功能说明 !! 本地接口名称 !! http接口名称 !! 详细说明
|-
| 获取某个地区信息 || getArea || area/get ||  [[area/get|示例]]
|-
| 获取多个地区信息 || fetchArea || area/fetch ||  [[area/fetch|示例]]
|-
| 获取某地区的子地区 || getByParentid || area/getByParentid||  [[area/getByParentid|示例]]
|-
| 获取全部地区（用于缓存） || getAll || area/getAll ||  [[area/getAll|示例]]
|}

==学校库API==
所属模块WindidApi::api('school')

{| class="wikitable"
|-  
! 功能说明 !! 本地接口名称 !! http接口名称 !! 详细说明
|-
| 获取某个学校信息 || getSchool || school/get || [[school/get|示例]]
|-
| 获取多个学校信息 || fetchSchool || school/fetch || [[school/fetch|示例]]
|-
| 获取某地区某类型的学校列表 || getSchoolByAreaidAndTypeid || school/getSchoolByAreaidAndTypeid || [[school/getSchoolByAreaidAndTypeid|示例]]
|}

==WindID配置API==
所属模块WindidApi::api('config')

{| class="wikitable"
|-  
! 功能说明 !! 本地接口名称 !! http接口名称 !! 详细说明
|-
| 获取某项配置 || getConfig || config/get || [[config/get|示例]]
|-
| 设置某项配置 || setConfig || config/set || [[config/set|示例]]
|-
| 删除某项配置 || deleteConfig || config/delete || [[config/delete|示例]]
|}
